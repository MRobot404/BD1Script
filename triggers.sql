create or replace  TRIGGER TGR_PERSONA
BEFORE INSERT ON PERSONA REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ12.NEXTVAL INTO :New.IDPERSONA  FROM DUAL;
END;

create or replace  TRIGGER TGR_CLIENTE
BEFORE INSERT ON CLIENTE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ2.NEXTVAL INTO :New.IDCLIENTE  FROM DUAL;
END;
create or replace  TRIGGER TGR_CORREO
BEFORE INSERT ON CORREO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ3.NEXTVAL INTO :New.IDCORREO  FROM DUAL;
END;

create or replace  TRIGGER TGR_TELEFONO
BEFORE INSERT ON TELEFONO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ19.NEXTVAL INTO :New.IDTELEFONO  FROM DUAL;
END;

create or replace  TRIGGER TGR_TIPOUSUARIO
BEFORE INSERT ON TIPO_USUARIO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ21.NEXTVAL INTO :New.ID_TIPO_USUARIO FROM DUAL;
END;

create or replace  TRIGGER TGR_ROL
BEFORE INSERT ON ROL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ18.NEXTVAL INTO :New.ID_ROL FROM DUAL;
END;

create or replace  TRIGGER TGR_ROL_TIPO_USUARIO
BEFORE INSERT ON ROL_TIPO_USUARIO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ17.NEXTVAL INTO :New.ID_ROL_TIPO_USUARIO FROM DUAL;
END;

create or replace  TRIGGER TGR_EMPLEADO
BEFORE INSERT ON EMPLEADO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ6.NEXTVAL INTO :New.ID_EMPLEADO FROM DUAL;
END;

create or replace  TRIGGER TGR_TIPO_DOCUMENTO
BEFORE INSERT ON TIPO_DOCUMENTO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ21.NEXTVAL INTO :New.ID_TIPOPERSONA FROM DUAL;
END;

create or replace  TRIGGER TGR_DOCUMENTO_PERSONA
BEFORE INSERT ON DOCUMENTO_PERSONA REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ5.NEXTVAL INTO :New.ID_DOCUMENTO_PERSONA FROM DUAL;
END;

create or replace  TRIGGER TGR_ESTADO
BEFORE INSERT ON ESTADO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ7.NEXTVAL INTO :New.IDESTADO_INMUEBLE FROM DUAL;
END;

create or replace  TRIGGER TGR_CATEGORIAS
BEFORE INSERT ON CATEGORIAS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ1.NEXTVAL INTO :New.IDCATEGORIA FROM DUAL;
END;

create or replace  TRIGGER TGR_ZONA
BEFORE INSERT ON ZONA REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ23.NEXTVAL INTO :New.ID_ZONA FROM DUAL;
END;

create or replace  TRIGGER TGR_DEPARTAMENTO
BEFORE INSERT ON DEPARTAMENTO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ4.NEXTVAL INTO :New.ID_DEPARTAMENTO FROM DUAL;
END;

create or replace  TRIGGER TGR_MUNICIPIO
BEFORE INSERT ON MUNICIPIO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ10.NEXTVAL INTO :New.ID_MUNICIPIO FROM DUAL;
END;

create or replace  TRIGGER TGR_ALDEAS
BEFORE INSERT ON ALDEAS_CASERIO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ.NEXTVAL INTO :New.ID_ALDEA FROM DUAL;
END;

create or replace  TRIGGER TGR_ZONA_GEOGRAFICA
BEFORE INSERT ON ZONA_GEOGRAFICA REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ22.NEXTVAL INTO :New.IDZONAGEOGRAFICA FROM DUAL;
END;

create or replace  TRIGGER TGR_COLONIA
BEFORE INSERT ON COLONIA REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ3.NEXTVAL INTO :New.ID_COLONIAS FROM DUAL;
END;

create or replace  TRIGGER TGR_INMUEBLE
BEFORE INSERT ON INMUEBLE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ8.NEXTVAL INTO :New.IDINMUEBLE FROM DUAL;
END;

create or replace  TRIGGER TGR_RENTA
BEFORE INSERT ON RENTA REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ14.NEXTVAL INTO :New.IDRENTA FROM DUAL;
END;

create or replace  TRIGGER TGR_RESERVA
BEFORE INSERT ON RESERVA REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ16.NEXTVAL INTO :New.IDRESERVA FROM DUAL;
END;

create or replace  TRIGGER TGR_RESERVA_PAGO
BEFORE INSERT ON RESERVA_PAGO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ15.NEXTVAL INTO :New.ID_RESERVA_PAGO FROM DUAL;
END;

create or replace  TRIGGER TGR_PAGO
BEFORE INSERT ON PAGO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ11.NEXTVAL INTO :New.IDPAGO FROM DUAL;
END;

create or replace  TRIGGER TGR_RENTA_PAGO
BEFORE INSERT ON RENTA_PAGO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ13.NEXTVAL INTO :New.ID_RENTAPAGO FROM DUAL;
END;

create or replace  TRIGGER TGR_MENU
BEFORE INSERT ON MENU REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
BEGIN
    SELECT TEST_SEQ9.NEXTVAL INTO :New.IDMENU  FROM DUAL;
END;

CREATE OR REPLACE TRIGGER VALIDARPRECIO 
BEFORE INSERT ON RENTA 
FOR EACH ROW
DECLARE
BEGIN
	IF :NEW.VALOR < 0 THEN
	   :NEW.VALOR := 0;
	END IF;
END;




CREATE OR REPLACE TRIGGER TR_HORARIO BEFORE INSERT ON CLIENTE

BEGIN 
	IF (TO_CHAR(SYSDATE, 'DY') IN ('SAT', 'SUN'))
	OR (TO_CHAR(SYSDATE, 'HH24:MI') NOT BETWEEN '07:00' AND '18:00')
	THEN RAISE_APPLICATION_ERROR(-20500, 'NO SE ENCUENTRA EN HORARIO OPERATIVO, FAVOR DE CONTACTAR A SOPORTE DB');
	END IF;
END;

Verificar los precios para que pueda redondear y que no sean menores a 0.

create or replace trigger tr_revisar_precio_renta
 before update of valor
 on renta
 for each row
 begin
  if (:new.valor<0) then
   :new.valor:=floor(:new.valor);
   then RAISE_APPLICATION_ERROR('El valor no puede ser menor a 0');
  end if;
 end tr_actualizar_precio_renta;
